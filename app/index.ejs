<!DOCTYPE html>
<html lang="en"<% if(htmlWebpackPlugin.files.manifest) { %> manifest="<%= htmlWebpackPlugin.files.manifest %>"<% } %>>
<head>
  <meta charset="utf-8">
  <title><%= htmlWebpackPlugin.options.title || 'Webpack App' %></title>
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1.0, user-scalable=0">
  <meta property="og:title" content="React-Redux-Observables Boilerplate" />
  <meta property="og:url" content="http://react-redux-observables-boilerplate.gilbarbara.com/" />
  <meta property="og:description" content="Provides: react ^16.x, react-router ^4.x, redux ^3.x, redux-observables ^0.17" />
  <meta property="og:image" content="http://react-redux-observables-boilerplate.gilbarbara.com/media/og-image-v1.png" />
  <meta property="og:type" content="website" />
  <link rel="manifest" href="/manifest.json">
  <meta name="theme-color" content="#000000">
  <meta name="apple-mobile-web-app-title" content="React-Redux-Observables">
  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta name="apple-mobile-web-app-status-bar-style" content="#333333">
  <link rel="shortcut icon" href="<%- require('assets/media/icons/favicon.ico') %>">
  <link rel="icon" type="image/png" href="<%- require('assets/media/icons/favicon-16x16.png') %>" sizes="16x16">
  <link rel="icon" type="image/png" href="<%- require('assets/media/icons/favicon-32x32.png') %>" sizes="32x32">
  <link rel="apple-touch-icon" sizes="180x180" href="<%- require('assets/media/icons/apple-touch-icon.png') %>">
  <link rel="mask-icon" href="<%- require('assets/media/icons/safari-pinned-tab.svg') %>" color="#764abc">
  <% require('assets/media/icons/icon-96x96.png') %>
  <% require('assets/media/icons/icon-144x144.png') %>
  <% require('assets/media/icons/icon-192x192.png') %>
  <% require('assets/media/icons/icon-512x512.png') %>
  <% require('assets/media/images/og-image-v1.png') %>
  <% if (htmlWebpackPlugin.options.baseHref) { %>
  <base href="<%= htmlWebpackPlugin.options.baseHref %>" />
  <% } %>
  <style type="text/css">.app { opacity: 0; }</style>
</head>
<body>
<div id="react" style="min-height: 100vh;">
  <style type="text/css">
    html {
      -webkit-font-smoothing: antialiased;
      font-size: 10px;
      font-family: Roboto, sans-serif;
      box-sizing: border-box
    }
    body {
      background-color: #fc6e84;
      font-size: 14px;
      line-height: 1.4;
      color: #595959
    }
    *, :after, :before {
      box-sizing: inherit
    }
    .loader {
      position: absolute;
      left: 50%;
      top: 50%;
      -ms-transform: translate(-50%, -50%);
      -webkit-transform: translate(-50%, -50%);
      transform: translate(-50%, -50%);
      width: 256px;
    }
    .loader > svg {
      height: 100%;
      width: 100%;
    }
    .logo polygon {
      -webkit-animation: swap-colors 2s infinite;
      animation: swap-colors 2s infinite;
    }
    polygon.path-2 {
      -webkit-animation-delay: 0.5s;
      animation-delay: 0.5s;
    }
    polygon.path-3 {
      -webkit-animation-delay: 1s;
      animation-delay: 1s;
    }
    polygon.path-4 {
      -webkit-animation-delay: 1.5s;
      animation-delay: 1.5s;
    }

    .unsupported-browser {
      background-color: #2b9591;
      color: #fff;
      padding: 1.5rem 3rem;
      position: absolute;
      top: 0;
      left: 50%;
      max-width: 90%;
      -ms-transform: translateX(-50%);
      -webkit-transform: translateX(-50%);
      transform: translateX(-50%);
    }
    .unsupported-browser a {
      color: #5fd9b4;
    }
    #message {
      bottom: 5%;
      padding: 0 5rem;
      position: absolute;
      text-align: center;
      width: 100%;
    }
    @-webkit-keyframes swap-colors {
      0% {
        fill: #00d8ff;
      }

      25% {
        fill: #764abc;
      }

      50% {
        fill: #ff0090;
      }

      75% {
        fill: #cd0423;
      }
    }
    @keyframes swap-colors {
      0% {
        fill: #00d8ff;
      }

      25% {
        fill: #764abc;
      }

      50% {
        fill: #ff0090;
      }

      75% {
        fill: #cd0423;
      }
    }
  </style>
  <div class="loader">
    <svg width="256px" height="177px" viewBox="0 0 256 177" version="1.1" xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="xMidYMid">
      <g class="logo">
        <polygon fill="#CD0423" points="128.0007 -0.0004 190.6627 176.2066 255.9997 176.2066" class="path-4"></polygon>
        <polygon fill="#FF0090" points="127.9998 -0.0004 126.8068 176.2066 191.9998 176.2066" class="path-3"></polygon>
        <polygon fill="#764ABC" points="127.9998 -0.0004 62.4698 176.2066 127.9998 176.2066" class="path-2"></polygon>
        <polygon fill="#00D8FF" points="-0.0002 176.2066 63.9998 176.2066 127.9998 -0.0004" class="path-1"></polygon>
      </g>
    </svg>
  </div>
</div>

<% if (htmlWebpackPlugin.options.appMountIds && htmlWebpackPlugin.options.appMountIds.length > 0) { %>
<% for (var index in htmlWebpackPlugin.options.appMountIds) { %>
<div id="<%= htmlWebpackPlugin.options.appMountIds[index] %>"></div>
<% } %>
<% } %>

<% if (htmlWebpackPlugin.options.window) { %>
<script>
  <% for (var varName in htmlWebpackPlugin.options.window) { %>
  window['<%= varName %>'] = <%= JSON.stringify(htmlWebpackPlugin.options.window[varName]) %>;
  <% } %>
</script>
<% } %>

<script>
  // lazy load the stylesheet file
  var cb = function() {
    var l = document.createElement('link');
    l.rel = 'stylesheet';
    l.href = '<%= htmlWebpackPlugin.files.css[0] %>';
    var h = document.getElementsByTagName('head')[0];
    h.parentNode.insertBefore(l, h);
  };
  var raf = window.requestAnimationFrame ||
    window.mozRequestAnimationFrame ||
    window.webkitRequestAnimationFrame ||
    window.msRequestAnimationFrame;
  if (raf) {
    raf(cb);
  }
  else {
    window.addEventListener('load', cb);
  }
</script>

<% for (var chunk in htmlWebpackPlugin.files.chunks) { %>
<script src="<%= htmlWebpackPlugin.files.chunks[chunk].entry %>"></script>
<% } %>

<% if (htmlWebpackPlugin.options.googleAnalytics) { %>
<script>
  (function(i, s, o, g, r, a, m) {
    i['GoogleAnalyticsObject'] = r;
    i[r] = i[r] || function() {
        (i[r].q = i[r].q || []).push(arguments)
      }, i[r].l = 1 * new Date();
    a = s.createElement(o),
      m = s.getElementsByTagName(o)[0];
    a.async = 1;
    a.src = g;
    m.parentNode.insertBefore(a, m)
  })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');


  <% if (htmlWebpackPlugin.options.googleAnalytics.trackingId) { %>
  ga('create', '<%= htmlWebpackPlugin.options.googleAnalytics.trackingId %>', 'auto');
  <% } else {
    throw new Error("html-webpack-template requires googleAnalytics.trackingId config");
  } %>

  <% if (htmlWebpackPlugin.options.googleAnalytics.pageViewOnLoad) { %>
  ga('send', 'pageview');
  <% } %>
</script>
<% } %>
<noscript>
  <div class="no-script">This website need Javascript. Please turn it on.</div>
</noscript>
</body>
</html>
